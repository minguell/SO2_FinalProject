Trabalho Prático Parte 2: Replicação e Eleição de Líder

Curso: Sistemas Operacionais II (INF01151)
Professor: Weverton Cordeiro
Semestre: 2024/2
Instituição: Universidade Federal do Rio Grande do Sul (UFRGS)

Objetivo Geral:
Implementar um serviço distribuído que realiza a soma de números inteiros enviados por múltiplos clientes. O sistema deve processar requisições de maneira concorrente/paralela, utilizando threads para lidar com cada solicitação, além de ser capaz de operar com alta disponibilidade e consistência por meio de replicação e mecanismos de eleição de líder.
Especificações Técnicas

    Funcionalidade Básica:
        Um servidor recebe números inteiros de múltiplos clientes e mantém uma variável acumuladora que armazena a soma de todas as requisições recebidas.
        As requisições devem ser processadas de forma concorrente utilizando threads.
        Implementação obrigatória em C/C++, utilizando sockets UDP do Unix.

    Critérios de Avaliação:
        Correção da soma realizada pelo servidor.
        Tempo de resposta para processar um grande volume de requisições (10.000.000+).

Funcionalidades Avançadas

    Replicação Passiva:
        O sistema deve garantir disponibilidade mesmo com falhas no servidor principal.
        Implementação de um esquema de replicação passiva:
            Um Replica Manager (RM) principal processa as requisições.
            Servidores secundários recebem atualizações do estado para manter consistência.
            Caso o RM principal falhe, um secundário deve assumir automaticamente, de maneira transparente para os clientes.

    Eleição de Líder:
        Implementação do algoritmo de eleição de líder "valentão" para determinar o próximo RM primário após falhas.
        O algoritmo deve atualizar os clientes com as informações do novo líder e garantir a continuidade do serviço com consistência.

Relatório Final

O relatório deve incluir:

    Descrição do Ambiente de Testes:
        Versão do sistema operacional, configuração da máquina (processador, memória) e compiladores usados.

    Justificativas e Explicações Técnicas:
        Funcionamento do algoritmo de eleição de líder e escolha realizada.
        Implementação da replicação passiva e desafios enfrentados.

    Problemas Encontrados:
        Relatar dificuldades e como foram (ou não) resolvidas.

    Critérios de Avaliação:
        Qualidade do relatório, implementação correta das funcionalidades e qualidade do programa (incluindo interface amigável e documentação do código).

Entrega e Apresentação

    O trabalho será feito em grupos de até 4 integrantes.
    A entrega deve incluir:
        Códigos-fonte.
        Makefile para compilação automatizada.
        Relatório e tutorial de execução.
    A demonstração será realizada presencialmente em laboratório.
